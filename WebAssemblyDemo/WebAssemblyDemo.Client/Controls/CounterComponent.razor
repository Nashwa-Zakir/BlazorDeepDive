@inject IJSRuntime JS
<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="TriggerCounter">Click me</button>

<br />
<br />
<button @onclick="ButtonClicked">Call the Javascript</button>

<br />
<br />
<button @onclick="ShowAge">Show Age</button>

@if (MyAge > 0)
{
    <div>I'm @MyAge years old.</div>
}

@code {
    private static int currentCount = 0;
    public int MyAge { get; set; } = 0;

    [JSInvokable]
    public static void IncrementCount()
    {
        currentCount++;
    }

    private async Task TriggerCounter()
    {
        await JS.InvokeVoidAsync("incrementcounter");
    }

    public async Task ButtonClicked()
    {
        await JS.InvokeVoidAsync("showMessage", new object[] { "Calling javascript from .NET " });
    }

    public class Painter
    {
        public int Id { get; set; } = 101;
        public string Name { get; set; } = "Vishal";
    }

    public async Task ShowAge()
    {
        MyAge = await JS.InvokeAsync<int>("calculateAge", new object[] { 1992 });
    }

}
